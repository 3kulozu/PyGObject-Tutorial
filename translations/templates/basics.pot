# SOME DESCRIPTIVE TITLE.
# Copyright (C) GNU Free Documentation License 1.3
# This file is distributed under the same license as the Python GTK+ 3 Tutorial package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python GTK+ 3 Tutorial 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2012-08-10 09:47\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/basics.txt:4
# 24b2f9d48b8e45bd859945b0860953ff
msgid "Basics"
msgstr ""

#: ../source/basics.txt:5
# 9db7f5bec09a41f384f19c77be527e38
msgid "This section will introduce some of the most important aspects of GTK+."
msgstr ""

#: ../source/basics.txt:12
# 6554ff54acd24984a89a55e5f009b8df
msgid "Main loop and Signals"
msgstr ""

#: ../source/basics.txt:13
# 798f7a779c44413caca68c8a81d13ad3
msgid "Like most GUI toolkits, GTK+ uses an event-driven programming model. When the user is doing nothing, GTK+ sits in the main loop and waits for input. If the user performs some action - say, a mouse click - then the main loop \"wakes up\" and delivers an event to GTK+."
msgstr ""

#: ../source/basics.txt:18
# b0cde78dd2054458ba6fb7a48d3d48e6
msgid "When widgets receive an event, they frequently emit one or more signals. Signals notify your program that \"something interesting happened\" by invoking functions you've connected to the signal. Such functions are commonly known as *callbacks*. When your callbacks are invoked, you would typically take some action - for example, when an Open button is clicked you might display a file chooser dialog. After a callback finishes, GTK+ will return to the main loop and await more user input."
msgstr ""

#: ../source/basics.txt:28
# f4cbd7ea24ba48c598d555447174c9fb
msgid "A generic example is:"
msgstr ""

#: ../source/basics.txt:34
# 972f44f8e7b8421980087239922b3322
msgid "Firstly, *widget* is an instance of a widget we created earlier. Next, the event we are interested in. Each widget has its own particular events which can occur. For instance, if you have a button you usually want to connect to the \"clicked\" event. This means that when the button is clicked, the signal is issued. Thirdly, the *callback* argument is the name of the callback function. It contains the code which runs when signals of the specified type are issued. Finally, the *data* argument includes any data which should be passed when the signal is issued. However, this argument is completely optional and can be left out if not required."
msgstr ""

#: ../source/basics.txt:46
# 267da506661044239ff7a68a0d6ce2b6
msgid "The function returns a number that identifies this particular signal-callback pair. It is required to disconnect from a signal such that the callback function will not be called during any future or currently ongoing emissions of the signal it has been connected to."
msgstr ""

#: ../source/basics.txt:56
# 70d627ed3a8d4fccb205b1182be57641
msgid "Almost all applications will connect to the \"delete-event\" signal of the top-level window. It is emitted if a user requests that a toplevel window is closed. The default handler for this signal destroys the window, but does not terminate the application. Connecting the \"delete-event\" signal to the function :func:`Gtk.main_quit` will result in the desired behaviour."
msgstr ""

#: ../source/basics.txt:66
# 72755f64dedf4e4abff5358fc148d04c
msgid "Calling :func:`Gtk.main_quit` makes the main loop inside of :func:`Gtk.main` return."
msgstr ""

#: ../source/basics.txt:69
# 8bd75530e6cc4e7ba47d6035a5a19513
msgid "Properties"
msgstr ""

#: ../source/basics.txt:70
# cd07ae732a92407dbd541935ad23c64c
msgid "Properties describe the configuration and state of widgets. As for signals, each widget has its own particular set of properties. For example, a button has the property \"label\" which contains the text of the label widget inside the button. You can specify the name and value of any number of properties as keyword arguments when creating an instance of a widget. To create a label aligned to the right with the text \"Hello World\" and an angle of 25 degrees, use:"
msgstr ""

#: ../source/basics.txt:81
# 388e665c8a7b44678d9b42d0621939a7
msgid "which is equivalent to"
msgstr ""

#: ../source/basics.txt:90
# 4f4a608797b74529bc040cef30c4f00e
msgid "Instead of using getters and setters you can also get and set the properties with ``widget.get_property(\"prop-name\")`` and ``widget.set_property(\"prop-name\", value)``, respectively."
msgstr ""

