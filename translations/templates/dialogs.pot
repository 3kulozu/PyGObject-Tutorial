# SOME DESCRIPTIVE TITLE.
# Copyright (C) GNU Free Documentation License 1.3
# This file is distributed under the same license as the Python GTK+ 3 Tutorial package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python GTK+ 3 Tutorial 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2012-08-10 09:47\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/dialogs.txt:2
# 1dd5ea16b1404a67bcd28d7af7753c3d
msgid "Dialogs"
msgstr ""

#: ../source/dialogs.txt:4
# b9062d1089ff4621bf28e82787f2c47a
msgid "Dialog windows are very similar to standard windows, and are used to provide or retrieve information from the user. They are often used to provide a preferences window, for example. The major difference a dialog has is some prepacked widgets which layout the dialog automatically. From there, we can simply add labels, buttons, check buttons, etc. Another big difference is the handling of responses to control how the application should behave after the dialog has been interacted with."
msgstr ""

#: ../source/dialogs.txt:12
# 7bf5f0e53f504d4baaeddaef90730236
msgid "There are several derived Dialog classes which you might find useful. :class:`Gtk.MessageDialog` is used for most simple notifications. But at other times you might need to derive your own dialog class to provide more complex functionality."
msgstr ""

#: ../source/dialogs.txt:18
# 7c42349595a04c80ae3b32123584ffaa
msgid "Custom Dialogs"
msgstr ""

#: ../source/dialogs.txt:20
# 79aeb3e99f044622883b727c57998a66
msgid "To pack widgets into a custom dialog, you should pack them into the :class:`Gtk.Box`, available via :meth:`Gtk.Dialog.get_content_area`. To just add a :class:`Gtk.Button` to the bottom of the dialog, you could use the :meth:`Gtk.Dialog.add_button` method."
msgstr ""

#: ../source/dialogs.txt:25
# 0e6944251bb0499e86b914e24a661c07
msgid "A 'modal' dialog (that is, one which freezes the rest of the application from user input), can be created by calling :class:`Gtk.Dialog.set_modal` on the dialog or set the ``flags`` argument of the :class:`Gtk.Dialog` constructor to include the :attr:`Gtk.DialogFlags.MODAL` flag."
msgstr ""

#: ../source/dialogs.txt:30
# 46f04f710ca64529b28419f1c74a750a
msgid "Clicking a button will emit a signal called \"response\". If you want to block waiting for a dialog to return before returning control flow to your code, you can call :meth:`Gtk.Dialog.run`. This method returns an int which may be a value from the :class:`Gtk.ResponseType` or it could be the custom response value that you specified in the :class:`Gtk.Dialog` constructor or :meth:`Gtk.Dialog.add_button`."
msgstr ""

#: ../source/dialogs.txt:36
# 5a9193d46e084e44985bf546dce39b79
msgid "Finally, there are two ways to remove a dialog. The :meth:`Gtk.Widget.hide` method removes the dialog from view, however keeps it stored in memory. This is useful to prevent having to construct the dialog again if it needs to be accessed at a later time. Alternatively, the :meth:`Gtk.Widget.destroy` method can be used to delete the dialog from memory once it is no longer needed. It should be noted that if the dialog needs to be accessed after it has been destroyed, it will need to be constructed again otherwise the dialog window will be empty."
msgstr ""

#: ../source/dialogs.txt:46
# 942af61eae774a53a1b3bd2adfc9177a
msgid "Dialog Objects"
msgstr ""

#: ../source/dialogs.txt:50
# a8ec8359f9a34d339116eeeabb7d9bad
msgid "Creates a new :class:`Gtk.Dialog` with title *title* and transient parent *parent*. The *flags* argument can be used to make the dialog model (:attr:`Gtk.DialogFlags.MODAL`) and/or to have it destroyed along with its transient parent (:attr:`Gtk.DialogFlags.DESTROY_WITH_PARENT`)."
msgstr ""

#: ../source/dialogs.txt:55
# 7eb85ad9c99c49059f54a15a51b1e927
msgid "*buttons* is a tuple of buttons which can be set to provide a range of different buttons and responses. See the :meth:`add_button` method for details."
msgstr ""

#: ../source/dialogs.txt:59
#: ../source/dialogs.txt:163
# dc48cbe9d59841c890990db357220c66
# ecea65580b5c477ba6f64a6717051a45
msgid "All arguments are optional and can be referred to as key-word arguments as well."
msgstr ""

#: ../source/dialogs.txt:64
# de7b9331e8d240bba14374f745d1e661
msgid "Return the content area of of this dialog."
msgstr ""

#: ../source/dialogs.txt:68
# d37defa6e52a4e748fcc0fc7ea69ef21
msgid "Adds a button with the given text (or a stock button, if *button_text* is a :ref:`stock item <stock-items>`) and sets things up so that clicking the button will emit the \"response\" signal with the given *response_id*. The button is appended to the end of the dialog's action area."
msgstr ""

#: ../source/dialogs.txt:73
# 7b6e98b1220245cd903f1475eeef5d03
msgid "*response_id* can be any positive integer or one of the predefined :class:`Gtk.ResponseType` values:"
msgstr ""

#: ../source/dialogs.txt:76
# 6da12ecf1b2742f1b85193995afd9be5
msgid ":attr:`Gtk.ResponseType.NONE`"
msgstr ""

#: ../source/dialogs.txt:77
# 3bbc64b7eaee41309fdbffcacf1f7be9
msgid ":attr:`Gtk.ResponseType.REJECT`"
msgstr ""

#: ../source/dialogs.txt:78
#: ../source/dialogs.txt:209
# 6abad6c9533c4b2f9a7f09600ac0ea98
# 405882b092bb4586bbde36c3ad726822
msgid ":attr:`Gtk.ResponseType.ACCEPT`"
msgstr ""

#: ../source/dialogs.txt:79
# 9bb819ca56284c0d8347f063d0e9a747
msgid ":attr:`Gtk.ResponseType.DELETE_EVENT`"
msgstr ""

#: ../source/dialogs.txt:80
#: ../source/dialogs.txt:210
# 96d5049083ff42fea71f815166d718cc
# e1f618f73fe949d099a1e27e20fe160b
msgid ":attr:`Gtk.ResponseType.OK`"
msgstr ""

#: ../source/dialogs.txt:81
# 2bd6bba0a24e4cd087e34a8399dfbaec
msgid ":attr:`Gtk.ResponseType.CANCEL`"
msgstr ""

#: ../source/dialogs.txt:82
# 362ff9b6d7e04901ad34efa29c750ddc
msgid ":attr:`Gtk.ResponseType.CLOSE`"
msgstr ""

#: ../source/dialogs.txt:83
#: ../source/dialogs.txt:211
# 4078546696f6490cae891cadb070d8cd
# c37dbd7a8813483caa5488625299c83b
msgid ":attr:`Gtk.ResponseType.YES`"
msgstr ""

#: ../source/dialogs.txt:84
# 8ad1fbecebaf4871837f122c85e5a756
msgid ":attr:`Gtk.ResponseType.NO`"
msgstr ""

#: ../source/dialogs.txt:85
#: ../source/dialogs.txt:212
# 6caf6c34adc34296b929af6cee9b7563
# b72cfeef84584fbab4f9c77ff6fd1d01
msgid ":attr:`Gtk.ResponseType.APPLY`"
msgstr ""

#: ../source/dialogs.txt:86
# d8ef09af76e1451e86573224cbfbcaeb
msgid ":attr:`Gtk.ResponseType.HELP`"
msgstr ""

#: ../source/dialogs.txt:88
# 76992253b75845cc9d54a165b9825746
msgid "The button widget is returned, but usually you don't need it."
msgstr ""

#: ../source/dialogs.txt:92
# acc5c72eab1047e492b021eda58045b7
msgid "Adds several buttons to this dialog using the button data passed as arguments to the method. This method is the same as calling :meth:`add_button` repeatedly. The button data pairs - button text (or :ref:`stock item <stock-items>`) and a response ID integer are passed individually. For example::"
msgstr ""

#: ../source/dialogs.txt:102
# d08eb91272614383934c66ce07cf27a5
msgid "Sets a dialog modal or non-modal. Modal dialogs prevent interaction with other windows in the same application."
msgstr ""

#: ../source/dialogs.txt:107
# abd078ab2a0c4345ba3f3849afc90ef1
msgid "Blocks in a recursive main loop until the dialog either emits the \"response\" signal, or is destroyed. If the dialog is destroyed during the call to :meth:`run`, :meth:`run` returns :attr:`Gtk.ResponseType.NONE`. Otherwise, it returns the response ID from the \"response\" signal emission."
msgstr ""

#: ../source/dialogs.txt:113
#: ../source/dialogs.txt:175
#: ../source/dialogs.txt:340
# 6e4acf32aa6845eaa31386cd1573edcd
# 58de7ace08544443a4a18c11d8c21f73
# ac08ff8b9e434649bfd227bbaf4e7d68
msgid "Example"
msgstr ""

#: ../source/dialogs.txt:120
# 3ad2406451584374a89c15af4628afef
msgid "MessageDialog"
msgstr ""

#: ../source/dialogs.txt:122
# 760053b8a6be40d2859e4d7d7899a1dd
msgid ":class:`Gtk.MessageDialog` is a convenience class, used to create simple, standard message dialogs, with a message, an icon, and buttons for user response You can specify the type of message and the text in the :class:`Gtk.MessageDialog` constructor, as well as specifying standard buttons."
msgstr ""

#: ../source/dialogs.txt:127
# afee1506a6f54a4ca179869cfe5ce5bc
msgid "In some dialogs which require some further explanation of what has happened, a secondary text can be added. In this case, the primary message entered when creating the message dialog is made bigger and set to bold text. The secondary message can be set by calling :meth:`Gtk.MessageDialog.format_secondary_text`."
msgstr ""

#: ../source/dialogs.txt:133
# 6b04c0a0c1c4446a97f799a8817420ce
msgid "MessageDialog Objects"
msgstr ""

#: ../source/dialogs.txt:137
# 4a512b3977a048c8a4201077bf434be7
msgid "Creates a new :class:`Gtk.MessageDialog` with transient parent *parent*. The *flags* argument can be used to make the dialog model (:attr:`Gtk.DialogFlags.MODAL`) and/or to have it destroyed along with its transient parent (:attr:`Gtk.DialogFlags.DESTROY_WITH_PARENT`)."
msgstr ""

#: ../source/dialogs.txt:142
# 131b9b5c129040fd90604f159ddd9178
msgid "*message_type* can be set to one of the following values:"
msgstr ""

#: ../source/dialogs.txt:144
# 97818df00f944d839ae8c068a689ef0e
msgid ":attr:`Gtk.MessageType.INFO`: Informational message"
msgstr ""

#: ../source/dialogs.txt:145
# 80a4d727e96e4430b15570ca8d029d29
msgid ":attr:`Gtk.MessageType.WARNING`: Non-fatal warning message"
msgstr ""

#: ../source/dialogs.txt:146
# 1f38fff82c20430f88677e5d53a52735
msgid ":attr:`Gtk.MessageType.QUESTION`: Question requiring a choice"
msgstr ""

#: ../source/dialogs.txt:147
# 93591aead3094bb59237984b7efdd89a
msgid ":attr:`Gtk.MessageType.ERROR`: Fatal error message"
msgstr ""

#: ../source/dialogs.txt:148
# e816bfe23d7f4e2f8a22c0a0e323c41b
msgid ":attr:`Gtk.MessageType.OTHER`: None of the above, doesn't get an icon"
msgstr ""

#: ../source/dialogs.txt:150
# c8ab1d1eebf24cdc9e4466b559300d13
msgid "It is also possible to set a variety of buttons on the message dialog, to retrieve different responses from the user. One of the following values can be used:"
msgstr ""

#: ../source/dialogs.txt:154
# a0d870ccc7dd4078957308ddd8c0ca8a
msgid ":attr:`Gtk.ButtonsType.NONE`: no buttons at all"
msgstr ""

#: ../source/dialogs.txt:155
# 3407902610884015bdf3520b605ba016
msgid ":attr:`Gtk.ButtonsType.OK`: an OK button"
msgstr ""

#: ../source/dialogs.txt:156
# ead6f4f401ce40f5a2cac526b04c3a25
msgid ":attr:`Gtk.ButtonsType.CLOSE`: a Close button"
msgstr ""

#: ../source/dialogs.txt:157
# ebcd490fce464a83a67ca7ec8e071ebf
msgid ":attr:`Gtk.ButtonsType.CANCEL`: a Cancel button"
msgstr ""

#: ../source/dialogs.txt:158
# aa49f4c9e4bf45f78adb79d9b2e85943
msgid ":attr:`Gtk.ButtonsType.YES_NO`: Yes and No buttons"
msgstr ""

#: ../source/dialogs.txt:159
# 2916d8642fb8444d940282b1d146940c
msgid ":attr:`Gtk.ButtonsType.OK_CANCEL`: OK and Cancel buttons"
msgstr ""

#: ../source/dialogs.txt:161
# ed16eb8b9f7c4cc784297f6ea1d96da0
msgid "Finally, *message_format* is some text that the user may want to see."
msgstr ""

#: ../source/dialogs.txt:168
# 5f238278cef146e2967d826600fc89ef
msgid "Sets the secondary text of the message dialog to be *message_format*."
msgstr ""

#: ../source/dialogs.txt:170
# 78628273f5f5432cbf3fa3edc5ca0282
msgid "Note that setting a secondary text makes the primary text (*message_format* argument of :class:`Gtk.MessageDialog` constructor) become bold, unless you have provided explicit markup."
msgstr ""

#: ../source/dialogs.txt:183
# 3f1cbeffaf2547c4b36c28507aed65ad
msgid "FileChooserDialog"
msgstr ""

#: ../source/dialogs.txt:185
# 1b54f2ef6da24559a9845b5738e80e71
msgid "The :class:`Gtk.FileChooserDialog` is suitable for use with \"File/Open\" or \"File/Save\" menu items. You can use all of the :class:`Gtk.FileChooser` methods on the file chooser dialog as well as those for :class:`Gtk.Dialog`."
msgstr ""

#: ../source/dialogs.txt:189
# efb5f39184cb4a63a82c1e4abf9e8319
msgid "When creating a :class:`Gtk.FileChooserDialog` you have to define the dialog's purpose:"
msgstr ""

#: ../source/dialogs.txt:192
# 748411dae64840428f21582b157383a3
msgid "To select a file for opening, as for a File/Open command, use :attr:`Gtk.FileChooserAction.OPEN`"
msgstr ""

#: ../source/dialogs.txt:194
# 563f70ff5f7d4843a10cdfb77ec5384a
msgid "To save a file for the first time, as for a File/Save command, use :attr:`Gtk.FileChooserAction.SAVE`, and suggest a name such as \"Untitled\" with :meth:`Gtk.FileChooser.set_current_name`."
msgstr ""

#: ../source/dialogs.txt:197
# bab308797e704551aa893e33852b24b7
msgid "To save a file under a different name, as for a File/Save As command, use :attr:`Gtk.FileChooserAction.SAVE`, and set the existing filename with :meth:`Gtk.FileChooser.set_filename`."
msgstr ""

#: ../source/dialogs.txt:200
# e4c681be340347d99574d58e72ea4f06
msgid "To choose a folder instead of a file, use :attr:`Gtk.FileChooserAction.SELECT_FOLDER`."
msgstr ""

#: ../source/dialogs.txt:202
# 03173c9188774bb5abb968dce2971d67
msgid ":class:`Gtk.FileChooserDialog` inherits from :class:`Gtk.Dialog`, so buttons have response IDs such as :attr:`Gtk.ResponseType.ACCEPT` and :attr:`Gtk.ResponseType.CANCEL` which can be specified in the :class:`Gtk.FileChooserDialog` constructor. In contrast to :class:`Gtk.Dialog`, you can not use custom response codes with :class:`Gtk.FileChooserDialog`. It expects that at least one button will have of the following response IDs:"
msgstr ""

#: ../source/dialogs.txt:214
# 6ec6d1a5daf9471f9deb38f9c550c775
msgid "When the user is finished selecting files, your program can get the selected names either as filenames (:meth:`Gtk.FileChooser.get_filename`) or as URIs (:meth:`Gtk.FileChooser.get_uri`)."
msgstr ""

#: ../source/dialogs.txt:218
# 40b996c33e8e4d1da1af8e97d1bb8f8b
msgid "By default, :class:`Gtk.FileChooser` only allows a single file to be selected at a time. To enable multiple files to be selected, use :meth:`Gtk.FileChooser.set_select_multiple`. Retrieving a list of selected files is possible with either :meth:`Gtk.FileChooser.get_filenames` or :meth:`Gtk.FileChooser.get_uris`."
msgstr ""

#: ../source/dialogs.txt:224
# 918638a13fe845cb8978a2af218b8f7e
msgid ":class:`Gtk.FileChooser` also supports a variety of options which make the files and folders more configurable and accessible."
msgstr ""

#: ../source/dialogs.txt:227
# ebde2f9e612d4199ba63060ac2e5369c
msgid ":meth:`Gtk.FileChooser.set_local_only`: Only local files can be selected."
msgstr ""

#: ../source/dialogs.txt:228
# ee2c6b6d778a4d9aba406dd6b274a1f6
msgid ":meth:`Gtk.FileChooser.show_hidden`: Hidden files and folders are displayed."
msgstr ""

#: ../source/dialogs.txt:229
# 00e8780a6a244dd8b38f4d1c570b56df
msgid ":meth:`Gtk.FileChooser.set_do_overwrite_confirmation`: If the file chooser was configured in :attr:`Gtk.FileChooserAction.SAVE` mode, it will present a confirmation dialog if the user types a file name that already exists."
msgstr ""

#: ../source/dialogs.txt:233
# 09c28df190b2471ab8db44079442677e
msgid "Furthermore, you can specify which kind of files are displayed by creating :class:`Gtk.FileFilter` objects and calling :meth:`Gtk.FileChooser.add_filter`. The user can then select one of the added filters from a combo box at the bottom of the file chooser."
msgstr ""

#: ../source/dialogs.txt:239
# ca7cb4691e0046b98c0838044bf098c7
msgid "FileChooser Objects"
msgstr ""

#: ../source/dialogs.txt:243
# 36017c96af094822b5f714c9983a900a
msgid "Creates a new :class:`Gtk.FileChooserDialog` with title *title and transient parent *parent*."
msgstr ""

#: ../source/dialogs.txt:246
# 8cd2faf882a949db926c01813c8302f6
msgid "*action* can be one of the following:"
msgstr ""

#: ../source/dialogs.txt:248
# 6fa75eea73d546818e5bed33897d729c
msgid ":attr:`Gtk.FileChooserAction.OPEN`: The file chooser will only let the user pick an existing file."
msgstr ""

#: ../source/dialogs.txt:250
# 0d968286140741bb9501222ac3af15b1
msgid ":attr:`Gtk.FileChooserAction.SAVE`: The file chooser will let the user pick an existing file, or type in a new filename."
msgstr ""

#: ../source/dialogs.txt:252
# 9f3230f7122e486393b8a7b2b4d9acac
msgid ":attr:`Gtk.FileChooserAction.SELECT_FOLDER`: The file chooser will let the user pick an existing folder."
msgstr ""

#: ../source/dialogs.txt:254
# e7143d73aeea4598930d2e84e6ad0baf
msgid ":attr:`Gtk.FileChooserAction.CREATE_FOLDER`: The file chooser will let the user name an existing or new folder."
msgstr ""

#: ../source/dialogs.txt:257
# 6f4bcb89739647948b252bb1f134e9e7
msgid "The *buttons* argument has the same format as for the :class:`Gtk.Dialog` constructor."
msgstr ""

#: ../source/dialogs.txt:264
# fe743682444642058aaedcb2c8780792
msgid "Sets the current name in the file selector, as if entered by the user."
msgstr ""

#: ../source/dialogs.txt:268
# cff1fc4fe2b44d2e820bbb891037206e
msgid "Sets *filename* as the current filename for the file chooser, by changing to the file's parent folder and actually selecting the file in list; all other files will be unselected. If the chooser is in :attr:`Gtk.FileChooserAction.SAVE` mode, the file's base name will also appear in the dialog's file name entry."
msgstr ""

#: ../source/dialogs.txt:274
# 512d0b2ec0d14fe7beb05919598cd4e5
msgid "Note that the file must exist, or nothing will be done except for the directory change."
msgstr ""

#: ../source/dialogs.txt:279
# b46613799bb345f5bb9bba4c818ee637
msgid "Sets whether multiple files can be selected. This is only relevant if the mode is :attr:`Gtk.FileChooserAction.OPEN` or :attr:`Gtk.FileChooserAction.SELECT_FOLDER`."
msgstr ""

#: ../source/dialogs.txt:285
# dac2248392f74da990fa125dcd84769e
msgid "Sets whether only local files can be selected."
msgstr ""

#: ../source/dialogs.txt:289
# d6c3f5abd0a44200838bbd5a2273eeba
msgid "Sets whether to display hidden files and folders."
msgstr ""

#: ../source/dialogs.txt:293
# 9a738e74bb074dd1ad54a345ed48098e
msgid "Sets whether to confirm overwriting in save mode."
msgstr ""

#: ../source/dialogs.txt:297
# 3b546c6d1a864f4fa129791f73479a0d
msgid "Returns the filename for the currently selected file in the file selector. If multiple files are selected, use :meth:`get_filenames` instead."
msgstr ""

#: ../source/dialogs.txt:302
# cbdede1881e741bc8a8abc0f3a5888c5
msgid "Returns a list of all the selected files and subfolders in the current folder. The returned names are full absolute paths. If files in the current folder cannot be represented as local filenames they will be ignored. Use :meth:`get_uris` instead."
msgstr ""

#: ../source/dialogs.txt:309
# 42c4f79bff734210810aebb4aa3f3a2a
msgid "Returns the URI for the currently selected file in the file selector. If multiple files are selected, use :meth:`get_uris` instead."
msgstr ""

#: ../source/dialogs.txt:314
# cb379c81d8334836b53c609d11e2680c
msgid "Returns a list of all the selected files and subfolders in the current folder. The returned names are full absolute URIs."
msgstr ""

#: ../source/dialogs.txt:319
# e245b596e4ce47e2a5a5aad7cda29c19
msgid "Adds the :class:`Gtk.FileFilter` instance *filter* to the list of filters that the user can choose from. When a filter is selected, only files that are passed by that filter are displayed."
msgstr ""

#: ../source/dialogs.txt:327
# 0981376cd7ca436fba567cb9125aedb5
msgid "Sets the human-readable name of the filter; this is the string that will be displayed in the file selector user interface if there is a selectable list of filters."
msgstr ""

#: ../source/dialogs.txt:333
# f0e5296d77c949f0b8b71265cdf9124c
msgid "Adds a rule allowing a given mime type to filter."
msgstr ""

#: ../source/dialogs.txt:337
# ad387a1a2a1d4314ab0d366f4f7adbfa
msgid "Adds a rule allowing a shell style glob to a filter."
msgstr ""

